;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 12/23/2023
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <string.h>
;#include <delay.h>
;
;int START;
;unsigned int dem, x;
;unsigned int i;
;unsigned long ADC_out = 0;
;unsigned long nhietdo, chuc, dvi;
;
;#include <stdio.h>
;//chuong trinh con phat mot ky tu
;void uart_char_send(unsigned char chr){
; 0000 0024 void uart_char_send(unsigned char chr){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0025     while (!(UCSRA & (1<<UDRE))) {}; //cho den khi bit UDRE=1
;	chr -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0026         UDR=chr;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0027 }
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 002C {
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002D     i += 1;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 002E 
; 0000 002F     chuc = (i/10);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0030     dvi = (i%10);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0031 
; 0000 0032     uart_char_send(chuc+0x30);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0033     uart_char_send(dvi+0x30);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0034     // uart_char_send(10);
; 0000 0035     uart_char_send(13);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0036     delay_ms(200);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0037 
; 0000 0038 }
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 003C {
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 003D //        f = 125000Hz
; 0000 003E //        --> time = 1 / f = 8lan (us)
; 0000 003F //        TCNT0: 6 - 255, duoc 250 xung nhip
; 0000 0040 //        -> Time tran = 250 * 8 = 2000 (us) = 4s
; 0000 0041 //        dem++;
; 0000 0042 //        Neu bien dem tang 500 lan thi se dc 1(s)
; 0000 0043        dem++;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0044        TCNT0 = 6;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0045 }
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;
;
;//Ngat Nhan UART cho mot ky tu
;interrupt [USART_RXC] void usart_rx_isr(void)
; 0000 004A {
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 004B char data;
; 0000 004C data=UDR;
;PCODE: $00000046 VOL: 0
;	data -> R17
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 004D //uart_char_send(data);
; 0000 004E     if (data == '0'){ START = 0x00; }
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 004F     if (data == '9'){ START = 0xFF; }
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0050 
; 0000 0051     if (START == 0xFF)
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0052     {
; 0000 0053         //DIEU KHIEN 8 LED DON
; 0000 0054         if (data == '1'){ PORTC.7 = 0xFF; }
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0055         if (data == 'q'){ PORTC.7 = 0x00; }
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0056         if (data == '2'){ PORTC.6 = 0xFF; }
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0057         if (data == 'w'){ PORTC.6 = 0x00; }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0058         if (data == '3'){ PORTC.5 = 0xFF; }
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0059         if (data == 'e'){ PORTC.5 = 0x00; }
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 005A         if (data == '4'){ PORTC.4 = 0xFF; }
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 005B         if (data == 'r'){ PORTC.4 = 0x00; }
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 005C         if (data == '5'){ PORTC.3 = 0xFF; }
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 005D         if (data == 't'){ PORTC.3 = 0x00; }
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 005E         if (data == '6'){ PORTC.2 = 0xFF; }
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 005F         if (data == 'y'){ PORTC.2 = 0x00; }
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0060         if (data == '7'){ PORTC.1 = 0xFF; }
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0061         if (data == 'u'){ PORTC.1 = 0x00; }
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0062         if (data == '8'){ PORTC.0 = 0xFF; }
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0063         if (data == 'i'){ PORTC.0 = 0x00; }
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0064 
; 0000 0065 
; 0000 0066         //DIEU KHIEN LED RUN
; 0000 0067         if (data == 'z' )
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0068         {
; 0000 0069            x = 250;  //0.5s
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 006A         }
; 0000 006B 
; 0000 006C         if (data == 'x' )
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 006D         {
; 0000 006E            x = 500;  //1s
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 006F         }
; 0000 0070          if (data == 'c' )
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0071         {
; 0000 0072            x = 750;  //1.5s
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0073         }
; 0000 0074 
; 0000 0075         if (data == 'v' )
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0076         {
; 0000 0077            x = 1000; //2s
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0078         }
; 0000 0079          if (data == 'b' )
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 007A         {
; 0000 007B            x = 1250; //2.5s
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 007C         }
; 0000 007D 
; 0000 007E         if (data == 'n' )
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 007F         {
; 0000 0080            x = 1500;  //3s
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0081         }
; 0000 0082             if (data == 'm' )
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0083         {
; 0000 0084            x = 1750;  //3.5s
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0085         }
; 0000 0086 
; 0000 0087         if (data == 'j' )
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0088         {
; 0000 0089            x = 2000;  //4s
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 008A         }
; 0000 008B          if (data == 'k' )
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 008C         {
; 0000 008D            x = 2250;  //4.5s
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 008E         }
; 0000 008F 
; 0000 0090         if (data == 'l' )
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0091         {
; 0000 0092            x = 2500;  //5s
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0093         }
; 0000 0094 
; 0000 0095     }
;PCODE: $000000F2 VOL: 0
; 0000 0096 
; 0000 0097 }
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;
;
;
;#define ADC_VREF_TYPE 0x00
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 009F {
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 00A0 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;	adc_input -> Y+0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 00A1 // Delay needed for the stabilization of the ADC input voltage
; 0000 00A2 delay_us(10);
;PCODE: $000000FD VOL: 0
; 0000 00A3 // Start the AD conversion
; 0000 00A4 ADCSRA|=0x40;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 00A5 // Wait for the AD conversion to complete
; 0000 00A6 while ((ADCSRA & 0x10)==0);
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00A7 ADCSRA|=0x10;
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00A8 return ADCW;
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 00A9 }
;PCODE: $0000010B VOL: 0
;
;
;
;
;void main(void)
; 0000 00AF {
;PCODE: $0000010C VOL: 0
; 0000 00B0 // Input/Output Ports initialization
; 0000 00B1 // Port A initialization
; 0000 00B2 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 00B3 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 00B4 PORTA=0x00;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00B5 DDRA=0x00;
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 00B6 
; 0000 00B7 // Port B initialization
; 0000 00B8 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=Out
; 0000 00B9 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=1
; 0000 00BA PORTB=0x01;
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 00BB DDRB=0x01;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00BC 
; 0000 00BD // Port C initialization
; 0000 00BE // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 00BF // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 00C0 PORTC=0x00;
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00C1 DDRC=0xFF;
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 00C2 
; 0000 00C3 // Port D initialization
; 0000 00C4 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 00C5 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 00C6 PORTD=0x00;
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 00C7 DDRD=0x00;
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00C8 
; 0000 00C9 // Timer/Counter 0 initialization
; 0000 00CA // Clock source: System Clock
; 0000 00CB // Clock value: 125.000 kHz
; 0000 00CC // Mode: Normal top=0xFF
; 0000 00CD // OC0 output: Disconnected
; 0000 00CE TCCR0=0x03;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00CF TCNT0=0x00;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00D0 OCR0=0x00;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00D1 
; 0000 00D2 // Timer/Counter 1 initialization
; 0000 00D3 // Clock source: System Clock
; 0000 00D4 // Clock value: Timer1 Stopped
; 0000 00D5 // Mode: Normal top=0xFFFF
; 0000 00D6 // OC1A output: Discon.
; 0000 00D7 // OC1B output: Discon.
; 0000 00D8 // Noise Canceler: Off
; 0000 00D9 // Input Capture on Falling Edge
; 0000 00DA // Timer1 Overflow Interrupt: Off
; 0000 00DB // Input Capture Interrupt: Off
; 0000 00DC // Compare A Match Interrupt: Off
; 0000 00DD // Compare B Match Interrupt: Off
; 0000 00DE TCCR1A=0x00;
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00DF TCCR1B=0x00;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00E0 TCNT1H=0x00;
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00E1 TCNT1L=0x00;
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00E2 ICR1H=0x00;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00E3 ICR1L=0x00;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00E4 OCR1AH=0x00;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00E5 OCR1AL=0x00;
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00E6 OCR1BH=0x00;
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00E7 OCR1BL=0x00;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00E8 
; 0000 00E9 // Timer/Counter 2 initialization
; 0000 00EA // Clock source: System Clock
; 0000 00EB // Clock value: Timer2 Stopped
; 0000 00EC // Mode: Normal top=0xFF
; 0000 00ED // OC2 output: Disconnected
; 0000 00EE ASSR=0x00;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00EF TCCR2=0x00;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00F0 TCNT2=0x00;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 00F1 OCR2=0x00;
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00F2 
; 0000 00F3 // External Interrupt(s) initialization
; 0000 00F4 // INT0: On
; 0000 00F5 // INT0 Mode: Falling Edge
; 0000 00F6 // INT1: Off
; 0000 00F7 // INT2: Off
; 0000 00F8 GICR|=0x40;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00F9 MCUCR=0x02;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00FA MCUCSR=0x00;
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 00FB GIFR=0x40;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 00FC 
; 0000 00FD // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00FE TIMSK=0x01;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00FF 
; 0000 0100 // USART initialization
; 0000 0101 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0102 // USART Receiver: On
; 0000 0103 // USART Transmitter: On
; 0000 0104 // USART Mode: Asynchronous
; 0000 0105 // USART Baud Rate: 9600
; 0000 0106 UCSRA=0x00;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0107 UCSRB=0x98;
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 0108 UCSRC=0x86;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 0109 UBRRH=0x00;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 010A UBRRL=0x33;
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 010B 
; 0000 010C // Analog Comparator initialization
; 0000 010D // Analog Comparator: Off
; 0000 010E // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 010F ACSR=0x80;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 0110 SFIOR=0x00;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 0111 
; 0000 0112 // ADC initialization
; 0000 0113 // ADC Clock frequency: 1000.000 kHz
; 0000 0114 // ADC Voltage Reference: AREF pin
; 0000 0115 // ADC Auto Trigger Source: ADC Stopped
; 0000 0116 ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 0117 ADCSRA=0x83;
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 0118 
; 0000 0119 // SPI initialization
; 0000 011A // SPI disabled
; 0000 011B SPCR=0x00;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 011C 
; 0000 011D // TWI initialization
; 0000 011E // TWI disabled
; 0000 011F TWCR=0x00;
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 0120 
; 0000 0121 // Global enable interrupts
; 0000 0122 #asm("sei")
;PCODE: $00000160 VOL: 0
	sei
;PCODE: $00000161 VOL: 0
; 0000 0123 
; 0000 0124 while (1)
;PCODE: $00000162 VOL: 0
; 0000 0125       {
; 0000 0126          if(dem >= x)
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 0127         {
; 0000 0128             PORTB.0 = ~PORTB.0;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 0129             dem = 0;
;PCODE: $00000170 VOL: 0
; 0000 012A         }
; 0000 012B 
; 0000 012C             // DO NHIET DO
; 0000 012D             ADC_out = read_adc(0);
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 012E             nhietdo = ADC_out*500/1023; //10mV = 1do.
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 012F 
; 0000 0130             chuc = nhietdo/10;
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 0131             dvi = nhietdo%10;
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 0132             uart_char_send(chuc+0x30);
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 0133             uart_char_send(dvi+0x30);
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 0134 
; 0000 0135             uart_char_send(13);
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 0136             uart_char_send(10);
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 0137             delay_ms(200);
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 0138 
; 0000 0139       }
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 013A }
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
